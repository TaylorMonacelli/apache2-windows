environment:
  machine_user: vagrant
  machine_pass: vagrant
  KITCHEN_YAML: .kitchen.appveyor.yml

# Do not build on tags (GitHub only)
skip_tags: true

#faster cloning
clone_depth: 50

# Install the latest nightly of ChefDK
install:
  - ps: $env:PATH="C:\Ruby$env:ruby_version\bin;$env:PATH"
  - ps: iex (irm https://omnitruck.chef.io/install.ps1); Install-Project -Project chefdk -channel current
  - ps: 'Get-CimInstance win32_operatingsystem -Property Caption, OSArchitecture, Version | fl Caption, OSArchitecture, Version'
  - ps: $PSVersionTable
  - c:\opscode\chefdk\bin\chef.bat exec ruby --version
  - ps: secedit /export /cfg $env:temp/export.cfg
  - ps: ((get-content $env:temp/export.cfg) -replace ('PasswordComplexity = 1', 'PasswordComplexity = 0')) | Out-File $env:temp/export.cfg
  - ps: ((get-content $env:temp/export.cfg) -replace ('MinimumPasswordLength = 8', 'MinimumPasswordLength = 0')) | Out-File $env:temp/export.cfg
  - ps: secedit /configure /db $env:windir/security/new.sdb /cfg $env:temp/export.cfg /areas SECURITYPOLICY
  - ps: gem install bundler --quiet --no-ri --no-rdoc
  - ps: net user /add $env:machine_user $env:machine_pass
  - ps: net localgroup administrators $env:machine_user /add
  - ps: |-
       [Net.ServicePointManager]::SecurityProtocol=[Net.SecurityProtocolType]::Tls12

build_script:
  - bundle install || bundle install || bundle install
  - ps: c:\opscode\chefdk\bin\chef.bat shell-init powershell | iex; cmd /c c:\opscode\chefdk\bin\chef.bat --version

test_script:
  - c:\opscode\chefdk\bin\chef.bat exec kitchen verify apache2-config-windows-2012R2
  - ps: Get-Service | Where-Object { $_.DisplayName -Like '*apache*' -And $_.Status -Eq 'Running'} | Stop-Service
  - c:\opscode\chefdk\bin\chef.bat exec kitchen verify 64bit-apache-windows-2012R2
  - ps: Get-Service | Where-Object { $_.DisplayName -Like '*apache*' -And $_.Status -Eq 'Running'} | Stop-Service
  - c:\opscode\chefdk\bin\chef.bat exec kitchen verify x86-apache-windows-2012R2

deploy: off
